name: Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup AWS CLI
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: terraform
      run: terraform init -backend-config="bucket=bucket-tfstates-postech-fiap-6soat" -backend-config="key=mysql.tfstate" -backend-config="region=us-east-1"
    
    - name: Terraform Plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: terraform
      run: terraform plan -out=tfplan
    
    - name: Apply Terraform
      run: |
        terraform init
        terraform apply -input=false tfplan -auto-approve
    
  aws_cli_:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Zip Lambda function
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      working-directory: lambda
      run: zip -r lambda.zip *
    
    - name: Verificar se o arquivo existe
      run: test -f lambda.zip && echo "Arquivo encontrado" || echo "Arquivo não encontrado"
    
    - name: Configure AWS Credentials
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

    - name: AWS CLI Command
      with:
        args: configure
    
    - name: Upload to S3
      with:
        args: s3 cp lambda.zip s3://bucket-tfstates-postech-fiap-6soat/lambda.zip

    # - name: Configurar credenciais de autenticação
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    #   run: aws configure --debug

    # - name: Upload to S3
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    #   run: aws s3 cp lambda.zip s3://bucket-tfstates-postech-fiap-6soat/lambda.zip